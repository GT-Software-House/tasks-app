[versions]
agp = "8.9.0"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.9.3"
androidx-lifecycle = "2.8.3"
androidx-test-junit = "1.2.1"
coreSplashscreen = "1.0.1"
kermit = "2.0.5"
supabase-bom = "3.1.3"
compose-multiplatform = "1.7.3"
datastorePreferences = "1.1.3"
kotlin = "2.1.10"
kotlinxDatetime = "0.6.2"
kotlinxSerializationJson = "1.8.0"
lifecycleViewmodelCompose = "2.8.4"
mockk = "1.12.5"
multiplatformSettings= "1.3.0"
navigationCompose = "2.8.0-alpha13"
sqldelight = "2.0.2"
koin = "4.0.2"
startupRuntime = "1.2.0"
statelyCommon = "2.1.0"
materialKolor = "2.0.2"
junitJupiter = "5.12.1"
kotlinStdlib = "2.1.10"
runner = "1.6.2"
core = "1.6.1"
skie = "0.10.1"
kover = "0.9.1"
foojayResolverConvention = "0.8.0"

#Gradle
gradlePlugins-crashlytics = "2.9.9"
gradlePlugins-google-services = "4.4.1"
#Gitlive
gitliveFirebase = "2.1.0"
ktor = "3.0.3"
connectivity = "1.2.0"
workRuntimeKtx = "2.10.0"

[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
androidx-work-gcm = { module = "androidx.work:work-gcm", version.ref = "workRuntimeKtx" }
androidx-work-multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "workRuntimeKtx" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
connectivity-core = { module = "dev.jordond.connectivity:connectivity-core", version.ref = "connectivity" }
connectivity-device = { module = "dev.jordond.connectivity:connectivity-device", version.ref = "connectivity" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
supabase-auth-kt = { module = "io.github.jan-tennert.supabase:auth-kt" }
supabase-compose-auth = { module = "io.github.jan-tennert.supabase:compose-auth" }
supabase-postgrest = { module = "io.github.jan-tennert.supabase:postgrest-kt" }
supabase-realtime = { module = "io.github.jan-tennert.supabase:realtime-kt" }
supabase-bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "supabase-bom" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-compose-viewmodel-navigation = { group = "io.insert-koin", name = "koin-compose-viewmodel-navigation", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-android-workmanager = { group = "io.insert-koin", name = "koin-androidx-workmanager", version.ref = "koin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
mockk-common = { module = "io.mockk:mockk-common", version.ref = "mockk" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatformSettings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettings" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }
stately-iso-collections = { module = "co.touchlab:stately-iso-collections", version.ref = "statelyCommon" }
stately-isolate = { module = "co.touchlab:stately-isolate", version.ref = "statelyCommon" }
materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
foojayResolverConvention = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojayResolverConvention"}
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "gradlePlugins-crashlytics" }
google-services = { id = "com.google.gms.google-services", version.ref = "gradlePlugins-google-services" }
