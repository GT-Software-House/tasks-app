package org.gabrielsantana.quicknotes.data.task.source.local.model

import kotlinx.datetime.Instant
import org.gabrielsantana.quicknotes.data.task.TaskEntity
import org.gabrielsantana.quicknotes.data.task.model.Task
import org.gabrielsantana.quicknotes.data.task.source.remote.model.TaskNetworkModel

//The model is auto generated by the SQLDelight, this file is just for map function

internal fun TaskEntity.asTask(): Task = Task(
    uuid = uuid,
    deviceId = deviceId,
    title = title,
    description = description,
    isCompleted = isCompleted,
    createdAt = Instant.parse(createdAtTimestamp),
    completedAt = completedAtTimestamp?.let { Instant.parse(it) },
    updatedAt = Instant.parse(updatedAtTimestamp)
)

internal fun TaskEntity.asNetworkModel() = TaskNetworkModel(
    uuid = uuid,
    deviceId = deviceId,
    title = title,
    description = description,
    isCompleted = isCompleted,
    completedAt = completedAtTimestamp?.toString(),
    createdAt = createdAtTimestamp.toString(),
    updatedAt = updatedAtTimestamp.toString()
)